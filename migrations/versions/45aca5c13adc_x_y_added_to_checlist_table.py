"""X Y added to checlist table

Revision ID: 45aca5c13adc
Revises: 636d6e92b48e
Create Date: 2025-10-20 15:36:54.286450

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '45aca5c13adc'
down_revision: Union[str, Sequence[str], None] = '636d6e92b48e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# Definir el tipo ENUM fuera de las funciones para poder reutilizarlo
bodywork_checklist_view_enum = sa.Enum('front', 'back', 'left', 'right', 'up', name='bodywork_checklist_view_enum')


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. Crear el tipo ENUM en la base de datos
    bodywork_checklist_view_enum.create(op.get_bind())
    # 2. Ahora sí, añadir la columna que usa el nuevo tipo
    op.add_column('bodywork_checklist', sa.Column('view', bodywork_checklist_view_enum, nullable=False))
    op.add_column('bodywork_checklist', sa.Column('x', sa.Integer(), nullable=True))
    op.add_column('bodywork_checklist', sa.Column('y', sa.Integer(), nullable=True))
    op.add_column('bodywork_checklist', sa.Column('is_free_selection', sa.Boolean(), nullable=False))
    op.drop_constraint(op.f('bodywork_checklist_order_id_key'), 'bodywork_checklist', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('bodywork_checklist_order_id_key'), 'bodywork_checklist', ['order_id'], postgresql_nulls_not_distinct=False)
    op.drop_column('bodywork_checklist', 'is_free_selection')
    op.drop_column('bodywork_checklist', 'y')
    op.drop_column('bodywork_checklist', 'x')
    op.drop_column('bodywork_checklist', 'view')
    # Eliminar el tipo ENUM de la base de datos
    bodywork_checklist_view_enum.drop(op.get_bind())
    # ### end Alembic commands ###
